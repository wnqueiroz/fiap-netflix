version: "3.8"

services:
  postgres:
    image: postgres:13.1
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - ./docker/pg-init-scripts:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_MULTIPLE_DATABASES: backend_user,backend_support
  backend-user:
    build: ./apps/backend-user
    ports:
      - 9091:8081
    environment:
      NODE_ENV: development
      POSTGRES_DB: backend_user
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_PUBLIC_KEY: ${JWT_PUBLIC_KEY}
      JWT_PRIVATE_KEY: ${JWT_PRIVATE_KEY}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - postgres
  backend-support:
    build: ./apps/backend-support
    ports:
      - 9092:8081
    environment:
      NODE_ENV: development
      POSTGRES_DB: backend_support
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_PUBLIC_KEY: ${JWT_PUBLIC_KEY}
      JWT_PRIVATE_KEY: ${JWT_PRIVATE_KEY}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - postgres
